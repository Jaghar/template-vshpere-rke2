apiVersion: provisioning.cattle.io/v1
kind: Cluster
metadata:
  name: cluster-{{ .Values.cluster.name }}
  namespace: fleet-default
spec:
  {{- if .Values.cloudCredentialSecretName }}
  cloudCredentialSecretName: {{ .Values.cloudCredentialSecretName }}
  {{- end }}

  agentEnvVars:
  - name: HTTP_PROXY
    value: "{{ .Values.http_proxy }}"
  - name: HTTPS_PROXY
    value: "{{ .Values.http_proxy }}"
  - name: NO_PROXY
    value: "{{ .Values.no_proxy }}"

  defaultPodSecurityPolicyTemplateName: ''
  {{- if .Values.kubernetesVersion }}
  kubernetesVersion: {{ .Values.kubernetesVersion }}
  {{- end }}
  #localClusterAuthEndpoint:
  #  caCerts: ''
  #  enabled: true
  #  fqdn: ''
  rkeConfig:
    chartValues:
      rancher-vsphere-cpi:
        vCenter:
          datacenters: {{ .Values.vcenter.datacenter }}
          host: {{ .Values.vcenter.proxy }}
          password: {{ .Values.vCenterPassword }}
          username: {{ .Values.vcenter.username }}
      rancher-vsphere-csi:
        storageClass:
          allowVolumeExpansion: {{ .Values.vcenter.allowVolumeExpansion }}
          datastoreURL: {{ .Values.vcenter.datastoreURL }}
        vCenter:
          datacenters: {{ .Values.vcenter.datacenter }}
          host: {{ .Values.vcenter.proxy }}
          password: {{ .Values.vCenterPassword }}
          username: {{ .Values.vcenter.username }}
      {{- if eq .Values.cniVersion "none" }}

      {{- else }}
      rke2-{{ .Values.cniVersion }}:
        {}  
      {{- end }}
    {{- if eq .Values.cniVersion "none" }}
    additionalManifest: |-
      apiVersion: helm.cattle.io/v1
      kind: HelmChart
      metadata:
        namespace: kube-system
        name: antrea
      spec:
        bootstrap: true
        targetNamespace: kube-system
        chart: antrea
        repo: https://antrea.io/charts
        valuesContent: |-
          controller:
            tolerations:
            - key: CriticalAddonsOnly
              operator: Exists
            - effect: NoSchedule
              key: node-role.kubernetes.io/master
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
            - effect: NoExecute
              key: node-role.kubernetes.io/etcd
            - effect: NoExecute
              key: node.kubernetes.io/unreachable
              operator: Exists
              tolerationSeconds: 0
    {{- end }}  
    etcd:
      disableSnapshots: false
      snapshotRetention: 5
      snapshotScheduleCron: 0 */5 * * *
      s3:
        bucket: {{ .Values.s3.bucket }}
        cloudCredentialName: {{ .Values.s3.cloudCredential }}
        endpoint: {{ .Values.s3.endpoint }}
        endpointCA: ''
        folder: ''
        region: {{ .Values.s3.region }}
        skipSSLVerify: false 
    machineGlobalConfig:
      cni: {{ .Values.cniVersion }}
      disable-kube-proxy: false
      etcd-expose-metrics: false
      profile: null
    machinePools:
    {{- if .Values.pool.controlplane.quantity }}
    - name: {{ .Values.pool.controlplane.name }}
      etcdRole: {{ .Values.pool.controlplane.etcd }}
      controlPlaneRole: {{ .Values.pool.controlplane.controlplane }}
      workerRole: {{ .Values.pool.controlplane.worker }}
      quantity: {{ .Values.pool.controlplane.quantity }}
      unhealthyNodeTimeout: 0s
      machineConfigRef:
        kind: VmwarevsphereConfig
        name: {{ .Values.cluster.name }}-{{ .Values.pool.controlplane.name }}
      machineOS: linux
    {{- end }}
    
    {{- if .Values.pool.worker.quantity }}
    - name: {{ .Values.pool.worker.name }}
      etcdRole: {{ .Values.pool.worker.etcd }}
      controlPlaneRole: {{ .Values.pool.worker.controlplane }}
      workerRole: {{ .Values.pool.worker.worker }}
      quantity: {{ .Values.pool.worker.quantity }}
      unhealthyNodeTimeout: 0s
      machineConfigRef:
        kind: VmwarevsphereConfig
        name: {{ .Values.cluster.name }}-{{ .Values.pool.worker.name }}
      machineOS: linux
    {{- end }}
    
    machineSelectorConfig:
    - config:
        cloud-provider-name: {{ .Values.cloudprovider }}
        protect-kernel-defaults: false
#    registries:
#      configs:
#        authConfigSecretName: string
#          caBundle: string
#          insecureSkipVerify: boolean
#          tlsSecretName: string
#      mirrors:
#        endpoint:
#          - string
#        rewrite:
#          key: string    
    upgradeStrategy:
      controlPlaneConcurrency: 10%
      controlPlaneDrainOptions:
        timeout: 0
      workerConcurrency: 10%
      workerDrainOptions:
        timeout: 0

